import java.util.*;
public class TestClass {
	public static void main(String[] args){
		System.out.println("Hellow world");
		System.out.println(isPrimeHappy(25));
	}
	 private static boolean isPrime(int n) {
	        if (n <= 1) return false;
	        if (n == 2 || n == 3) return true;

	        if (n % 2 == 0 || n % 3 == 0) {
	        // If multiple of 2 or 3 it's not a prime
	            return false;
	        }

	        // Search for divisors from 5 to only sqrt(n)
	        // Example: 36: (1*36) (2*18) (3*12) (6*6) (12*3) (18*2) (36*1)
	        for ( int i = 5; i * i <= n; i += 6 ) {
	            // Check only odd numbers
	            if ( n % i == 0 || n % ( i + 2 ) == 0 ) {
	                // i+4 is not checked cause it's a multiple of 3
	                // i is increased by 6 (multiple of 3) and the first i+4 = 9
	                return false;
	            }
	        }

	        return true;
	    }

	    private static boolean isHappy(int n) {
	        do {
	            int sum = 0;

	            // While number n has two or more digits
	            while( n / 10 != 0 ) { 
	                int remainder = n % 10;         // last digit
	                n = n / 10;                     // n without last digit
	                sum += remainder * remainder;
	            }
	            sum += n * n;                       // add square of the last digit
	            n = sum;
	        } while(n != 1 && n != 4);              // n == 1 => :) n == 4 => :(

	        return n == 1;
	    }
	    public static int isPairedN(int a[],int n){
	    	if (a.length > 2){
	    	if ((a[a.length -1] + a[a.length - 2]) <= n || a.length > 1){
	    		for(int i = 0;i< a.length-1;i++){
	    			for(int j=i+1;j<=a.length-1;j++){
	    				if(a[i]+a[j] == n && i+j == n){
	    					return 1;
	    				}
	    			}
	    		}
	    		return 0;
	    	}else{
	    		return 0;
	    	}
	    }else
	     {
	    	return 0;
	     }
	    }
	    
	    public static int isPrimeHappy(int n){
	    	List<Integer> a=new ArrayList<Integer>();
	    	int sum = 0;
	    	boolean flag = false;
	    	if (n==0 || n==1){
	    		return 0;
	    	}else{
	    		for(int i=2;i<=n;i++){
	    			flag = false;
	    			for (int j=2;i<=i/2;j++){
	    				if(i%j == 0){
	    					flag = true;
	    				}
	    			}
	    			if(!flag){
	    				//insert in array i
	    				a.add(i);
	    			}
	    		}
	    	}
	    	
	    	for(int i=0;i< a.size();i++){
	    		sum = sum + a.get(i);
	    	}
	    	if(sum%n==0){
	    		return 1;
	    	}else{
	    		return 0;
	    	}
	    	
	    }


}
